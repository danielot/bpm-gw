---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for Control and status register for the MLVDS trigger
---------------------------------------------------------------------------------------
-- File           : wb_slave_trigger_regs_pkg.vhd
-- Author         : auto-generated by wbgen2 from wb_trigger.wb
-- Created        : Thu Jan 28 16:38:34 2016
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wb_trigger.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package wb_trig_wbgen2_pkg is
  
  
  -- Input registers (user design -> WB slave)
  
  type t_wb_trig_in_registers is record
    end record;
  
  constant c_wb_trig_in_registers_init_value: t_wb_trig_in_registers := (
    );
    
    -- Output registers (WB slave -> user design)
    
    type t_wb_trig_out_registers is record
      rcv_len_0_3_o                            : std_logic_vector(31 downto 0);
      rcv_len_4_7_o                            : std_logic_vector(31 downto 0);
      transm_len_0_3_o                         : std_logic_vector(31 downto 0);
      transm_len_4_7_o                         : std_logic_vector(31 downto 0);
      trigger_dir_o                            : std_logic_vector(7 downto 0);
      trigger_term_o                           : std_logic_vector(7 downto 0);
      trigger_trig_val_o                       : std_logic_vector(7 downto 0);
      end record;
    
    constant c_wb_trig_out_registers_init_value: t_wb_trig_out_registers := (
      rcv_len_0_3_o => (others => '0'),
      rcv_len_4_7_o => (others => '0'),
      transm_len_0_3_o => (others => '0'),
      transm_len_4_7_o => (others => '0'),
      trigger_dir_o => (others => '0'),
      trigger_term_o => (others => '0'),
      trigger_trig_val_o => (others => '0')
      );
    function "or" (left, right: t_wb_trig_in_registers) return t_wb_trig_in_registers;
    function f_x_to_zero (x:std_logic) return std_logic;
    function f_x_to_zero (x:std_logic_vector) return std_logic_vector;
end package;

package body wb_trig_wbgen2_pkg is
function f_x_to_zero (x:std_logic) return std_logic is
begin
if x = '1' then
return '1';
else
return '0';
end if;
end function;
function f_x_to_zero (x:std_logic_vector) return std_logic_vector is
variable tmp: std_logic_vector(x'length-1 downto 0);
begin
for i in 0 to x'length-1 loop
if(x(i) = 'X' or x(i) = 'U') then
tmp(i):= '0';
else
tmp(i):=x(i);
end if; 
end loop; 
return tmp;
end function;
function "or" (left, right: t_wb_trig_in_registers) return t_wb_trig_in_registers is
variable tmp: t_wb_trig_in_registers;
begin
return tmp;
end function;
end package body;
